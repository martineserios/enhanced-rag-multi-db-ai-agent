# filepath: docker-compose.yml
# version: '3.8'

services:
  # Backend API Service
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/data
    environment:
      # - OPENAI_API_KEY=${OPENAI_API_KEY}
      # - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      # - GROQ_API_KEY=${GROQ_API_KEY}
      - MONGO_URI=mongodb://mongo:27017/ragchatbot
      - POSTGRES_URI=postgresql://postgres:postgres@postgres:5432/ragchatbot
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEO4J_URI=neo4j://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
    env_file:
      - .env
    depends_on:
      - postgres
      - mongo
      - chroma
      - redis
      - neo4j
    networks:
      - ragnet

  # Frontend Streamlit UI
  frontend:
    build: ./frontend
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    env_file:
      - .env
    environment:
      # - OPENAI_API_KEY=${OPENAI_API_KEY}
      # - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      # - GROQ_API_KEY=${GROQ_API_KEY}
      - BACKEND_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - ragnet
    security_opt:
      - seccomp=unconfined
    cap_add:
      - SYS_ADMIN

  # PostgreSQL (Relational Database)
  postgres:
    image: ankane/pgvector:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ragchatbot
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    networks:
      - ragnet

  # MongoDB (Non-Relational Database)
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - ragnet

  # Chroma Vector Database
  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - ragnet

  # Redis for Short-term Memory
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ragnet

  # Neo4j for Procedural Memory
  neo4j:
    image: neo4j:5.9.0
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
    volumes:
      - neo4j_data:/data
    networks:
      - ragnet

networks:
  ragnet:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  chroma_data:
  redis_data:
  neo4j_data: